{"ast":null,"code":"import _classCallCheck from \"/Users/karan/Reverse-Task/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/karan/Reverse-Task/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/karan/Reverse-Task/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/karan/Reverse-Task/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/karan/Reverse-Task/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/karan/Reverse-Task/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"handleInput\",\n    value: function handleInput(event) {\n      this.setState({\n        input: event.target.value\n      });\n      var diction = {};\n\n      for (var i = 0; i < event.target.value.length; ++i) {\n        if (event.target.value[i].toUpperCase() === event.target.value[i].toLowerCase()) {\n          continue;\n        }\n\n        if (!diction[event.target.value[i]]) {\n          diction[event.target.value[i]] = 1;\n        } else {\n          diction[event.target.value[i]]++;\n        }\n      }\n\n      this.setState({\n        individuals: diction\n      });\n      var splitInput = event.target.value.split(\"\");\n      var rev = splitInput.reverse();\n      var word = rev.join(\"\");\n      this.setState({\n        reverse: word\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var i = this.state.input;\n      var r = this.state.reverse;\n      var ind = this.state.individuals;\n      this.state.testCases.unshift({\n        input: i,\n        reverse: r,\n        individuals: ind\n      });\n      this.setState({\n        input: \"\",\n        reverse: \"\",\n        individuals: {}\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"The following program takes a string and displays its reverse as well as a list of the unique characters in the string with its count:\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Input:\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"input\",\n        type: \"text\",\n        value: this.state.input,\n        onChange: this.handleInput,\n        placeholder: \"Type anything!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Your input:\"), \" \", this.state.input), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Reverse:\"), \" \", this.state.reverse), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Individual letters and count:\")), Object.keys(this.state.individuals).map(function (key, index) {\n        return React.createElement(\"p\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \" \", key, \" : \", _this.state.individuals[key]);\n      }), React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Submit to Test Cases!\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Test Cases:\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.testCases.map(function (item, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Word:\"), \" \", item.input), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Reverse:\"), \" \", item.reverse), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Individual letters and count:\")), Object.keys(item.individuals).map(function (key, index) {\n          return React.createElement(\"p\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, \" \", key, \" : \", item.individuals[key]);\n        }), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //<button onClick={this.handleClear}>Clear all entries!</button>","map":{"version":3,"sources":["/Users/karan/Reverse-Task/src/App.js"],"names":["React","Component","App","event","setState","input","target","value","diction","i","length","toUpperCase","toLowerCase","individuals","splitInput","split","rev","reverse","word","join","state","r","ind","testCases","unshift","handleInput","Object","keys","map","key","index","handleSubmit","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  \n  handleInput(event) {\n    this.setState({\n      input: event.target.value\n    })\n    var diction = {}\n    for (var i = 0; i < event.target.value.length; ++i) {\n      if (event.target.value[i].toUpperCase() === event.target.value[i].toLowerCase()) {\n        continue;\n      }\n      if (!diction[event.target.value[i]]) {\n        diction[event.target.value[i]] = 1;\n      }\n      else {\n        diction[event.target.value[i]]++;\n      }\n    }\n    this.setState({\n      individuals: diction\n    })\n    var splitInput = event.target.value.split(\"\");\n    var rev = splitInput.reverse();\n    var word = rev.join(\"\");\n    this.setState({\n      reverse: word\n    })\n  }\n\n  handleSubmit(event) {\n    let i = this.state.input;\n    let r = this.state.reverse;\n    let ind = this.state.individuals;\n    this.state.testCases.unshift({input: i, reverse: r, individuals: ind})\n    this.setState({\n      input: \"\",\n      reverse: \"\",\n      individuals: {}\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h3>The following program takes a string and displays its reverse as well as a list of the unique characters in the string with its count:</h3>\n        <hr></hr>\n        <label htmlFor=\"input\"><b>Input:</b></label>\n        <br></br>\n        <input id=\"input\" type=\"text\" value = {this.state.input} onChange={this.handleInput} placeholder=\"Type anything!\"/>\n        <p><b>Your input:</b> {this.state.input}</p>\n        <p><b>Reverse:</b> {this.state.reverse}</p>\n        <p><b>Individual letters and count:</b></p>\n        {\n          Object.keys(this.state.individuals).map((key, index) => ( \n            <p key={index}> {key} : {this.state.individuals[key]}</p> \n          ))\n        }\n        <button onClick={this.handleSubmit}>Submit to Test Cases!</button>\n        <br></br>\n        <hr></hr>\n        <h3>Test Cases:</h3>\n        <hr></hr>\n        <div>\n        {this.state.testCases.map((item, index) => \n          <div key={index}>\n            <p><b>Word:</b> {item.input}</p>\n            <p><b>Reverse:</b> {item.reverse}</p>\n            <p><b>Individual letters and count:</b></p>\n            {\n              Object.keys(item.individuals).map((key, index) => ( \n                <p key={index}> {key} : {item.individuals[key]}</p> \n              ))\n            }\n            <hr></hr>\n          </div>\n        )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//<button onClick={this.handleClear}>Clear all entries!</button>"]},"metadata":{},"sourceType":"module"}